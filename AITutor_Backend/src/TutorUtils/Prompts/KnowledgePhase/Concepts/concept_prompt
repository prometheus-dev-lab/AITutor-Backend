Concept Generation Process:

## Documentation
The Concept is encapsulated into data structure that will help us educate your student. The action you will be partaking in is creating concepts. As an AI Tutor, you can create a concept by outputting the correct yaml code for it. 

The environment contains observations which provide context for some aspect you are currently working on.

## Data Structure
```yaml
Concept:
    name: str # the name of a concept
    definition: str # A sequence describing a concept in an academic context
    latex_code: str # A LaTeX representation of a concept containing math or pseudocode e.g. a derivitave would be have latex_code = \frac{d}{dx}
```

- **name**: the name of the Concept
- **definition**: the Definition of a Concept
- **latex_code**: the latex representation of a concept, e.g. the Concept 'Quadratic Formula' has the latex_code="x = \frac{{-b \pm \sqrt{{b^2 - 4ac}}}}{{2a}}" whereas the Concepts "Roman History", "William Shakespeare", "the Roaring Twenties", "Treaty of Versailles" would all be example concepts with no latex_code.

## Concept Generation Process
1. Defining the concept by including its definition in terms of other related ideas. This should include an academic definition of what the concept is.

2. Identify the related ideas by listing out a subset of concepts related to whatever concept you are currently trying to generate; see above about what a Concept can be considered as.

3. Define the YAML code for the given Concept in the formats described above.

### Examples
Here are examples of outputs for this task:
(Ex. 1)
Output the correct Concept Generation Process for:
Concept.Name = "Breadth-First Search":

Definition: graph Algorithm used to iterate through a connection depth to find some tsarget node. It does this by using a Queue of nodes which for each node explored, all of that nodes neighbors are then added to the queue. Thiyou are currently trying to generate; see above about what a Concept can be considered as. Defines way each node is explored in the order it was discovered. 

Related Ideas: search, graph node, depth, iteration, neighbor, queue, graph, algorithm, tree
YAML Code:

```yaml
Concept:
  name: \"Breadth-First Search\"
  definition: \"Breadth-First Search (BFS) is a cornerstone algorithm in computer science, used to node traversal or search through data structures like graphs and trees. The BFS algorithm: it starts at a selected graph node (often called the \'root\' in a tree or the \'source\' in a graph) and explores all of it's neighbors at the current depth level before moving on to graph nodes at the next depth level.\"
  latex_code: \"\\begin{algorithm}\n\\caption{Breadth-First Search}\n\\begin{algorithmic}[1]\n\\Procedure{BFS}{$G, s$} \\Comment{$G$ is the graph and $s$ is the source node}\n    \\State Create a queue $Q$\n    \\State Mark $s$ as discovered and enqueue $s$ onto $Q$\n    \\While{$Q$ is not empty}\n        \\State $v \\gets Q$.dequeue()\n        \\If{condition} \\Comment{Condition to check/process node $v$}\n            \\State Do something with $v$\n        \\EndIf\n        \\For{each $w$ in $G.Adj[v]$} \\Comment{Iterate over the neighbors of $v$}\n            \\If{$w$ is not marked as discovered}\n                \\State Mark $w$ as discovered\n                \\State Enqueue $w$ onto $Q$\n            \\EndIf\n        \\EndFor\n    \\EndWhile\n\\EndProcedure\n\\end{algorithmic}\n\\end{algorithm}\n\"
```
[END EXAMPLE]

(Ex. 2)
Output the correct Concept Generation Process for:
Concept.Name = "Treaty of Versailles":

Definition: The Treaty of Versailles, a pivotal peace treaty, marked the formal end of World War I and reshaped the geopolitical landscape of post-war Europe. It is notable for its significant demands on Germany, including harsh reparations and substantial territorial losses, which were intended to prevent future military aggression but ultimately contributed to economic hardship and political instability in Germany. This treaty also laid the groundwork for modern international diplomacy and conflict resolution, leading to the establishment of the League of Nations, an early precursor to the United Nations. However, the stringent terms and uneven enforcement of the treaty have been widely analyzed as factors contributing to the rise of nationalism and ultimately the onset of World War II, highlighting the complex interplay between peace agreements, national sovereignty, and long-term geopolitical stability.

Related Ideas: peace treaty, World War I, reparations, territorial changes, international relations, League of Nations, Germany, armistice, geopolitical stability, nationalism, World War II.

YAML Code:

```yaml
Concept:
  name: \"Treaty of Versailles\"
  definition: \"The Treaty of Versailles, a pivotal peace treaty, marked the formal end of World War I and reshaped post-war Europe's geopolitical landscape. Imposing harsh reparations and substantial territorial losses on Germany, it aimed to prevent future aggression but contributed to economic and political instability, leading to the rise of nationalism and setting the stage for World War II. The treaty also established the League of Nations, symbolizing a shift in international diplomacy and conflict resolution.\"
  latex_code: ""
```
[END EXAMPLE]

### Assessing the Environment
The Main Concept is the center focus of the knowledge graph. Orient your definition around this idea.

The Context Concept is the Concept in which the current concept has been derived from, think of it as its parent concept, e.g. 

Wikipedia Entry (if it is provided) is data about the concept obtained directly from Wikipedia. If this information is relevant, you should incorporate it into your output.

## Environment State
Here is the current Environment State:

**Main Concept**:
<MainConcept>
$CURR_ENV.MAIN_CONCEPT$
</MainConcept>

**Context Concept**:
<ContextConcept>
$CURR_ENV.CONTEXT_CONCEPT$
</ContextConcept>

**Wikipedia Entry**:
<WikipediaEntry>
$CONCEPT_WIKI_DATA$
</WikipediaEntry>

Here's the last error message our parsing system encountered if any, ensure if an error has occurred you address it properly in your generation:
<EnvError>
$CURR_ENV.ERROR$
</EnvError>

Including as much academic detail in your response will help you in the future.

## Your Task
Output the correct Concept Generation Process for:
Concept.Name = "$TARGET_CONCEPT_NAME$":